{"version":3,"sources":["components/Chat.js","components/LeftSidebar.js","components/Navbar.js","App.js","index.js"],"names":["Chat","currData","useState","input","setInput","image","setImage","userChats","localStorage","getItem","JSON","parse","getData","allEnt","setAllEnt","useEffect","setItem","stringify","today","Date","toLocaleString","className","map","currElem","ind","value","type","name","onChange","e","target","placeholder","autocomplete","onClick","preventDefault","console","log","newData","LoginForm","onSubmit","setCurrData","error","handleChange","Form","Group","controlId","Label","Control","Text","message","Button","variant","block","ModelSubmitForm","show","setShow","handleClose","initialData","setError","list","allData","setAllData","style","height","src","width","alt","display","Modal","onHide","Header","closeButton","Title","Body","temp","trim","Object","values","every","validate","Navbar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wYA0FeA,EArFF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAWf,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAXZ,WACf,IAAMK,EAAYC,aAAaC,QAAQ,oBACvC,OAAIF,EACIG,KAAKC,MAAMJ,GAEX,GAM4BK,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGAC,qBAAU,WACTP,aAAaQ,QAAQ,mBAAoBN,KAAKO,UAAUJ,MACtD,CAACA,IAEJ,IAaIK,GAAQ,IAAIC,MAAOC,iBAEvB,OACC,mCACC,qBAAKC,UAAU,gBAAf,SACC,sBAAKA,UAAU,qBAAf,UACC,qBAAKA,UAAU,0BAAf,SACC,yCAAYpB,OAIb,qBAAKoB,UAAU,0BAAf,SACER,EAAOS,KAAI,SAACC,EAAUC,GACtB,OACC,qCACC,mBAAGH,UAAU,OAAb,SAAqBE,EAASpB,QAC9B,4BAAIe,IACJ,4BAAIK,EAASlB,gBAMjB,+BACC,sBAAKgB,UAAU,6BAAf,UACC,uBACCI,MAAOtB,EACPuB,KAAK,OACLC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOzB,EAASyB,EAAEC,OAAOL,QACnCM,YAAY,gBACZV,UAAU,gBACVW,aAAa,QAEd,uBACCP,MAAOpB,EACPqB,KAAK,OACLE,SAAU,SAACC,GAAD,OAAOvB,EAASuB,EAAEC,OAAOL,QACnCJ,UAAU,WACVM,KAAK,SAEN,wBAAQM,QAtDM,SAACJ,GACpBA,EAAEK,iBACFC,QAAQC,IAAIjC,GAEZ,IAAMkC,EAAU,CACflC,MAAOA,EACPE,MAAOA,GAERD,EAAS,IACTU,EAAU,GAAD,mBAAKD,GAAL,CAAawB,KACtBF,QAAQC,IAAIvB,IA4CP,SACC,cAAC,IAAD,CAAUQ,UAAU,4BCxEtBiB,EAAY,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUtC,EAAmC,EAAnCA,SAAUuC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC/CC,EAAe,SAACb,GACrB,MAAwBA,EAAEC,OAAlBH,EAAR,EAAQA,KAAMF,EAAd,EAAcA,MACde,EAAY,2BAAKvC,GAAN,kBAAiB0B,EAAOF,MAGpC,OACC,eAACkB,EAAA,EAAD,CAAMJ,SAAUA,EAAhB,UACC,eAACI,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACC,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CACCrB,KAAK,OACLK,YAAY,aACZJ,KAAK,OACLF,MAAOxB,EAAS0B,KAChBC,SAAUc,EACVV,aAAa,QAEE,KAAfS,EAAMd,MACN,cAACgB,EAAA,EAAKK,KAAN,CAAW3B,UAAU,aAArB,SAAmCoB,EAAMd,UAG3C,uBACA,eAACgB,EAAA,EAAKC,MAAN,CAAYC,UAAU,mBAAtB,UACC,cAACF,EAAA,EAAKG,MAAN,6BACA,cAACH,EAAA,EAAKI,QAAN,CACCrB,KAAK,UACLK,YAAY,gBACZJ,KAAK,UACLF,MAAOxB,EAASgD,QAChBrB,SAAUc,EACVV,aAAa,QAEK,KAAlBS,EAAMQ,SACN,cAACN,EAAA,EAAKK,KAAN,CAAW3B,UAAU,aAArB,SAAmCoB,EAAMQ,aAG3C,uBACA,cAACC,EAAA,EAAD,CAAQ7B,UAAU,WAAW8B,QAAQ,eAAezB,KAAK,SAAS0B,OAAK,EAAvE,6BAOY,SAASC,IACvB,MAAwBnD,oBAAS,GAAjC,mBAAOoD,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAE5BE,EAAc,CACnB9B,KAAM,GACNsB,QAAS,IAaV,EAAgC/C,mBAASuD,GAAzC,mBAAOxD,EAAP,KAAiBuC,EAAjB,KACA,EAA0BtC,mBAAS,IAAnC,mBAAOuC,EAAP,KAAciB,EAAd,KACA,EAA8BxD,mBAXd,WACf,IAAMyD,EAAOnD,aAAaC,QAAQ,uBAClC,OAAIkD,EACIjD,KAAKC,MAAMgD,GAEX,GAM8B/C,IAAvC,mBAAOgD,EAAP,KAAgBC,EAAhB,KACA1B,QAAQC,IAAI,UAAWwB,GAGvB7C,qBAAU,WACTP,aAAaQ,QAAQ,sBAAuBN,KAAKO,UAAU2C,MACzD,CAACA,IAsBJ,OACC,mCACC,sBAAKvC,UAAU,cAAf,UACC,sBAAKA,UAAU,sBAAsByC,MAAO,CAAEC,OAAQ,SAAtD,UACC,sBAAK1C,UAAU,kCAAf,UACC,yEACA,cAAC,IAAD,CACCA,UAAU,cACVY,QAtDa,kBAAMsB,GAAQ,IAuD3BJ,QAAQ,eAITS,EAAQtC,KAAI,SAACC,EAAUC,GAEvB,OACC,sBAAKH,UAAU,qBAAf,UACC,qBACC2C,IAAI,mHACJC,MAAM,OACNC,IAAI,KAEL,sBACC7C,UAAU,yBACVyC,MAAO,CAAEK,QAAS,8BAFnB,UAIC,6BAAK5C,EAASI,OACd,4BAAIJ,EAAS0B,eAX0BzB,SAkB5C,eAAC4C,EAAA,EAAD,CAAOd,KAAMA,EAAMe,OAAQb,EAA3B,UACC,cAACY,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACC,cAACH,EAAA,EAAMI,MAAP,8CAED,cAACJ,EAAA,EAAMK,KAAP,UACC,cAAC,EAAD,CACClC,SApDoB,SAACV,GAC1BA,EAAEK,iBATc,SAAC,GAAuB,IAArBP,EAAoB,EAApBA,KAAMsB,EAAc,EAAdA,QACnByB,EAAO,GAIb,OAHAA,EAAK/C,KAAuB,KAAhBA,EAAKgD,OAAgB,oBAAsB,GACvDD,EAAKzB,QAA6B,KAAnBA,EAAQ0B,OAAgB,uBAAyB,GAChEjB,EAASgB,GACFE,OAAOC,OAAOH,GAAMI,OAAM,SAACrD,GAAD,MAAqB,KAAVA,KAKxCsD,CAAS9E,KACZ4D,EAAW,GAAD,mBAAKD,GAAL,CAAc3D,KACxBuC,EAAYiB,GACZD,KAGDK,EAAW,GAAD,mBAAKD,GAAL,CAAc3D,KACxBkC,QAAQC,IAAInC,IA4CPA,SAAUA,EACVuC,YAAaA,EACbC,MAAOA,SAIV,cAAC,EAAD,S,UCzIWuC,EATA,WACd,OACC,sBAAK3D,UAAU,SAAf,UACC,qBAAK2C,IAAI,kFACT,qDCcYiB,G,MAZH,WACX,OACC,qBAAK5D,UAAU,MAAf,SACC,sBAAKA,UAAU,YAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,W,MCPJ6D,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.1b9b01b0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/LeftSidebar.css\";\r\nimport \"../css/chat.css\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nconst Chat = ({ currData }) => {\r\n\t//getUserData .....................................................\r\n\tconst getData = () => {\r\n\t\tconst userChats = localStorage.getItem(\"UserChatsHistory\");\r\n\t\tif (userChats) {\r\n\t\t\treturn JSON.parse(userChats);\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t};\r\n\r\n\tconst [input, setInput] = useState(\"\");\r\n\tconst [image, setImage] = useState(\"\");\r\n\tconst [allEnt, setAllEnt] = useState(getData());\r\n\r\n\t//set User\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"UserChatsHistory\", JSON.stringify(allEnt));\r\n\t}, [allEnt]);\r\n\r\n\tconst sendMessage = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(input);\r\n\r\n\t\tconst newData = {\r\n\t\t\tinput: input,\r\n\t\t\timage: image,\r\n\t\t};\r\n\t\tsetInput(\"\");\r\n\t\tsetAllEnt([...allEnt, newData]);\r\n\t\tconsole.log(allEnt);\r\n\t};\r\n\r\n\tvar today = new Date().toLocaleString();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"chatcontainer\">\r\n\t\t\t\t<div className=\"chatcontainer__div\">\r\n\t\t\t\t\t<div className=\"chatcontainer__userdata\">\r\n\t\t\t\t\t\t<h6>Doctor,{currData}</h6>\r\n\t\t\t\t\t\t{/* <p>Message .....</p> */}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"chatcontainer__userbody\">\r\n\t\t\t\t\t\t{allEnt.map((currElem, ind) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<p className=\"mt-4\">{currElem.input}</p>\r\n\t\t\t\t\t\t\t\t\t<p>{today}</p>\r\n\t\t\t\t\t\t\t\t\t<p>{currElem.image}</p>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<div className=\"chatcontainer__usermessage\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setInput(e.target.value)}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Type a mesage\"\r\n\t\t\t\t\t\t\t\tclassName=\"message_field\"\r\n\t\t\t\t\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tvalue={image}\r\n\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setImage(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"sendFile\"\r\n\t\t\t\t\t\t\t\tname=\"file\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button onClick={sendMessage}>\r\n\t\t\t\t\t\t\t\t<SendIcon className=\"sendIcon\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../css/LeftSidebar.css\";\r\nimport Chat from \"../components/Chat\";\r\nimport \"../css/chat.css\";\r\n\r\nconst LoginForm = ({ onSubmit, currData, setCurrData, error }) => {\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetCurrData({ ...currData, [name]: value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={onSubmit}>\r\n\t\t\t<Form.Group controlId=\"formBasicname\">\r\n\t\t\t\t<Form.Label>Enter Name:</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tvalue={currData.name}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t/>\r\n\t\t\t\t{error.name !== \"\" && (\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">{error.name}</Form.Text>\r\n\t\t\t\t)}\r\n\t\t\t</Form.Group>\r\n\t\t\t<br />\r\n\t\t\t<Form.Group controlId=\"formBasicmessage\">\r\n\t\t\t\t<Form.Label>Enter Message:</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"message\"\r\n\t\t\t\t\tplaceholder=\"Enter Message\"\r\n\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\tvalue={currData.message}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t/>\r\n\t\t\t\t{error.message !== \"\" && (\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">{error.message}</Form.Text>\r\n\t\t\t\t)}\r\n\t\t\t</Form.Group>\r\n\t\t\t<br />\r\n\t\t\t<Button className=\"add_user\" variant=\"primary mt-4\" type=\"submit\" block>\r\n\t\t\t\tAdd Details\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default function ModelSubmitForm() {\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\tconst initialData = {\r\n\t\tname: \"\",\r\n\t\tmessage: \"\",\r\n\t};\r\n\r\n\t//getUserData .....................................................\r\n\tconst getData = () => {\r\n\t\tconst list = localStorage.getItem(\"ModelSubmitFormData\");\r\n\t\tif (list) {\r\n\t\t\treturn JSON.parse(list);\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t};\r\n\r\n\tconst [currData, setCurrData] = useState(initialData);\r\n\tconst [error, setError] = useState({});\r\n\tconst [allData, setAllData] = useState(getData());\r\n\tconsole.log(\"allData\", allData);\r\n\r\n\t//set data\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"ModelSubmitFormData\", JSON.stringify(allData));\r\n\t}, [allData]);\r\n\r\n\tconst validate = ({ name, message }) => {\r\n\t\tconst temp = {};\r\n\t\ttemp.name = name.trim() === \"\" ? \"name is required*\" : \"\";\r\n\t\ttemp.message = message.trim() === \"\" ? \"message is required*\" : \"\";\r\n\t\tsetError(temp);\r\n\t\treturn Object.values(temp).every((value) => value === \"\");\r\n\t};\r\n\r\n\tconst onLoginFormSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (validate(currData)) {\r\n\t\t\tsetAllData([...allData, currData]);\r\n\t\t\tsetCurrData(initialData);\r\n\t\t\thandleClose();\r\n\t\t\t<Chat currData={currData} />;\r\n\t\t}\r\n\t\tsetAllData([...allData, currData]);\r\n\t\tconsole.log(currData);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"leftUseList\">\r\n\t\t\t\t<div className=\"leftUseList_sidebar\" style={{ height: \"100vh\" }}>\r\n\t\t\t\t\t<div className=\"leftUseList_sidebar__add_button\">\r\n\t\t\t\t\t\t<h6>Start a Conversation Click 👉</h6>\r\n\t\t\t\t\t\t<ControlPointIcon\r\n\t\t\t\t\t\t\tclassName=\"add_buttton\"\r\n\t\t\t\t\t\t\tonClick={handleShow}\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{allData.map((currElem, ind) => {\r\n\t\t\t\t\t\t// return <h1>{`${currElem.name}` + \" \" + `${currElem.message}`}</h1>;\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className=\"leftUseList__users\" key={ind}>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc=\"https://www.seekpng.com/png/full/23-236651_doctors-and-nurses-transparent-png-sticker-transparent-background.png\"\r\n\t\t\t\t\t\t\t\t\twidth=\"60px\"\r\n\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName=\"leftUseList__usersname\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ display: \"flex;flex-direction:column\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<h5>{currElem.name}</h5>\r\n\t\t\t\t\t\t\t\t\t<p>{currElem.message}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Add User Details 🤵</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<LoginForm\r\n\t\t\t\t\t\t\tonSubmit={onLoginFormSubmit}\r\n\t\t\t\t\t\t\tcurrData={currData}\r\n\t\t\t\t\t\t\tsetCurrData={setCurrData}\r\n\t\t\t\t\t\t\terror={error}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Chat />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"../css/Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<div className=\"navbar\">\r\n\t\t\t<img src=\"https://image.freepik.com/free-vector/doctor-character-background_1270-84.jpg\" />\r\n\t\t\t<h1>Doctor e-Clinic</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport LeftSidebar from \"./components/LeftSidebar\";\nimport Navbar from \"./components/Navbar\";\n// import Chat from \"./components/Chat\";\n\nimport \"./css/chat.css\";\nimport \"./index.css\";\nimport \"./App.css\";\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"app__body\">\n\t\t\t\t<Navbar />\n\t\t\t\t<LeftSidebar />\n\t\t\t\t{/* <Chat /> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}